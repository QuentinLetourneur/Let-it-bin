manifest {
    homePage = 'https://gitlab.pasteur.fr/qletourn/Benchmark_binning'
    description = ''
    mainScript = 'let-it-bin.nf'
}

executor {
    name = 'slurm'
    queueSize = 50
}

singularity {
    enabled = true
    runOptions = "-B /pasteur:/pasteur -H /pasteur/homes/qletourn:/mnt"
}

process {
    executor='slurm'
    queue = 'hubbioit'
    clusterOptions='--qos=hubbioit'
    errorStrategy = 'terminate'

    withName: filtering {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/filtering.simg"
        errorStrategy = { task.exitStatus == 143 ? 'retry' : 'terminate' }
        maxRetries = 2
        memory = { 10.GB * task.attempt }
    }

    withName: trimming* {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/trimming.simg"
        errorStrategy = { task.exitStatus == 143 ? 'retry' : 'terminate' }
        maxRetries = 2
        memory = { 5.GB * task.attempt }
    }

    withName: khmer* {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/khmer.simg"
        errorStrategy  = { task.exitStatus == 143 ? 'retry' : 'terminate' }
        maxRetries = 2
        memory = { 60.GB * task.attempt }
    }

    withName: assembly* {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/assemblers.simg"
    }

    withName: contigs_annotation {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/contigs_annotation.simg"
    }

    withName: decoy* {
        clusterOptions = "--qos=fast"
    }

    withName: bowtie2_index {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/filtering.simg"
        errorStrategy = { task.exitStatus == 143 ? 'retry' : 'finish' }
        maxRetries = 10
        memory = {10.GB * task.attempt}
    }

    withName: mapping_count {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/mapping_count.simg"
    }

    withName: count_matrix {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/mapping_count.simg"
        clusterOptions = "--qos=fast"
    }

    withName: index_bam {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/samtools.simg"
        clusterOptions = "--qos=fast"
    }

    withName: idxstat {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/samtools.simg"
        errorStrategy = { task.exitStatus == 143 ? 'retry' : 'terminate' }
        maxRetries = 4
        memory = { 5.GB * task.attempt }
    }

    withName: gen_cov_bed {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/bedtools.simg"
        errorStrategy = { task.exitStatus == 143 ? 'retry' : 'terminate' }
        maxRetries = 4
        memory = { 15.GB * task.attempt }
    }

    withName: abun_and_link_profile {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/concoct_cocacola.simg"
        errorStrategy = { task.exitStatus == 143 ? 'retry' : 'terminate' }
        maxRetries = 3
        memory = { 50.GB * task.attempt }
    }

    withName: jgi_summa_depths {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/metabat.simg"
        errorStrategy = { task.exitStatus == 143 ? 'retry' : 'terminate' }
        maxRetries = 3
        memory = { 15.GB * task.attempt }
    }

    withName: Canopy {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/canopy.simg"
        errorStrategy = { task.exitStatus == 143 ? 'retry' : 'terminate' }
        maxRetries = 8
        memory = { 10.GB * task.attempt }
    }

    withName: maxbin {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/maxbin.simg"
        errorStrategy = { task.exitStatus == 143 ? 'retry' : 'terminate' }
        maxRetries = 5
        memory = { 14.GB * task.attempt }
    }

    withName: Metabat {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/metabat.simg"
        errorStrategy = { task.exitStatus == 143 ? 'retry' : 'terminate' }
        maxRetries = 7
        memory = { 30.GB * task.attempt }
    }

    withName: Metabat2 {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/metabat.simg"
        errorStrategy = { task.exitStatus == 143 ? 'retry' : 'terminate' }
        maxRetries = 4
        memory = { 10.GB * task.attempt }
    }

    withName: CONCOCT {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/concoct_cocacola.simg"
        errorStrategy = { task.exitStatus == 143 ? 'retry' : 'terminate' }
        maxRetries = 4
        memory = { 10.GB * task.attempt }
    }

    withName: COCACOLA {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/concoct_cocacola.simg"
        errorStrategy = { task.exitStatus == 143 ? 'retry' : 'terminate' }
        maxRetries = 4
        memory = { 80.GB * task.attempt }
    }

    withName: MetaGen {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/metagen.simg"
        errorStrategy = { task.exitStatus == 143 ? 'retry' : 'terminate' }
        maxRetries = 4
        memory = {80.GB * task.attempt}
    }

    withName: Binsanity_wf {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/binsanity_checkm.simg"
        errorStrategy = { task.exitStatus == 143 ? 'retry' : 'terminate' }
        maxRetries = 4
        memory = {80.GB * task.attempt}
    }

    withName: checkm {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/binsanity_checkm.simg"
        errorStrategy = { task.exitStatus == 143 ? 'retry' : 'terminate' }
        maxRetries = 2
        memory = { 100.GB * task.attempt }
    }

    withName: annotation_by_bin {
        clusterOptions = "--qos=fast"
    }

    withName: eval_complet_conta {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/Rplots.simg"
        clusterOptions = "--qos=fast"
    }

    withName: resume_res {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/Rplots.simg"
        clusterOptions = "--qos=fast"
    }

    withName: dastool {
        container = "/pasteur/projets/policy01/BioIT/quentin/scripts/Benchmark_binning/Singularity/dastool.simg"
        errorStrategy  = { task.exitStatus == 143 ? 'retry' : 'terminate' }
        maxRetries = 4
        memory = { 20.GB * task.attempt }
    }
}

timeline.enabled = true
dag.enabled = true
report.enabled = true
